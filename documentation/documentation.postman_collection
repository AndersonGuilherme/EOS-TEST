{
	"info": {
		"_postman_id": "7b49b3f5-054e-4570-9143-7fddc5533b57",
		"name": "Documentação da API EOS",
		"description": "This template contains a boilerplate for documentation that you can quickly customize and reuse.\n\n### How to use this template:\n\n- Replace the content given brackets (()) with your API's details.\n- Tips are formatted in `codespan` - feel free to read and remove them.\n    \n\n---\n\n`Start with a brief overview of what your API offers.`\n\nThe ((product name)) provides many API products, tools, and resources that enable you to ((add product value here)).\n\n`You can also list the APIs you offer, link to the relevant pages, or do both in this section.`\n\n## **Getting started guide**\n\n`List the steps or points required to start using your APIs. Make sure to cover everything required to reach success with your API as quickly as possible.`\n\nTo start using the ((add APIs here)), you need to -\n\n`The points given below are from The Postman API's documentation. You can reference it to write your own getting started guide.`\n\n- You must use a valid API Key to send requests to the API endpoints. You can get your API key from Postman's [integrations dashboard](https://go.postman.co/settings/me/api-keys).\n- The API has [rate and usage limits](https://postman.postman.co/workspace/Collection-Templates~6311738d-2e70-441f-ae12-78caf078c5b7/collection/22517504-e9c28f47-1253-44af-a2f3-20dce4da1f18?ctx=documentation#rate-and-usage-limits).\n- The API only responds to HTTPS-secured communications. Any requests sent via HTTP return an HTTP 301 redirect to the corresponding HTTPS resources.\n- The API returns request responses in JSON format. When an API request returns an error, it is sent in the JSON response as an error key.\n    \n\n## Authentication\n\n`Add details on the authorization keys/tokens required, steps that cover how to get them, and the relevant error codes.`\n\nThe ((product name)) API uses ((add your API's authorization type)) for authentication.\n\n`The details given below are from the Postman API's documentation. You can reference it to write your own authentication section.`\n\nPostman uses API keys for authentication. You can generate a Postman API key in the [API keys](https://postman.postman.co/settings/me/api-keys) section of your Postman account settings.\n\nYou must include an API key in each request to the Postman API with the X-Api-Key request header.\n\n### Authentication error response\n\nIf an API key is missing, malformed, or invalid, you will receive an HTTP 401 Unauthorized response code.\n\n## Rate and usage limits\n\n`Use this section to cover your APIs' terms of use. Include API limits, constraints, and relevant error codes, so consumers understand the permitted API usage and practices.`\n\n`The example given below is from The Postman API's documentation. Use it as a reference to write your APIs' terms of use.`\n\nAPI access rate limits apply at a per-API key basis in unit time. The limit is 300 requests per minute. Also, depending on your plan, you may have usage limits. If you exceed either limit, your request will return an HTTP 429 Too Many Requests status code.\n\nEach API response returns the following set of headers to help you identify your use status:\n\n| Header | Description |\n| --- | --- |\n| `X-RateLimit-Limit` | The maximum number of requests that the consumer is permitted to make per minute. |\n| `X-RateLimit-Remaining` | The number of requests remaining in the current rate limit window. |\n| `X-RateLimit-Reset` | The time at which the current rate limit window resets in UTC epoch seconds. |\n\n### 503 response\n\nAn HTTP `503` response from our servers indicates there is an unexpected spike in API access traffic. The server is usually operational within the next five minutes. If the outage persists or you receive any other form of an HTTP `5XX` error, [contact support](https://support.postman.com/hc/en-us/requests/new/).\n\n### **Need some help?**\n\n`Add links that customers can refer to whenever they need help.`\n\nIn case you have questions, go through our tutorials ((link to your video or help documentation here)). Or visit our FAQ page ((link to the relevant page)).\n\nOr you can check out our community forum, there’s a good chance our community has an answer for you. Visit our developer forum ((link to developer forum)) to review topics, ask questions, and learn from others.\n\n`You can also document or add links to libraries, code examples, and other resources needed to make a request.`",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "4328997",
		"_collection_link": "https://oialbert.postman.co/workspace/EOS---TESTE-ANDERSON~de2e5b20-3aa5-47da-b0d8-043fe35016d4/collection/4328997-7b49b3f5-054e-4570-9143-7fddc5533b57?action=share&source=collection_link&creator=4328997"
	},
	"item": [
		{
			"name": "Usuários",
			"item": [
				{
					"name": "Criar um usuário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Criar um usuário\", function () {\r",
									"    var { id, email } = pm.response.json();\r",
									"    pm.expect(id).exist\r",
									"    pm.expect(email).exist\r",
									"    pm.environment.set(\"user_id\", id);\r",
									"    pm.environment.set(\"user_email\", email);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "email@provedor.com.br",
									"description": "Email de autenticação",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345678",
									"description": "Senha de autenticação",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:3333/api/users",
							"host": [
								"localhost"
							],
							"port": "3333",
							"path": [
								"api",
								"users"
							]
						},
						"description": "Gets information about the authenticated user."
					},
					"response": [
						{
							"name": "201 - Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "email2@provedor.com.br",
											"description": "Email de autenticação",
											"type": "text"
										},
										{
											"key": "password",
											"value": "12345678",
											"description": "Senha de autenticação",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3333/api/users",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-length",
									"value": "168"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Sun, 15 Oct 2023 19:07:22 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"email\": \"email2@provedor.com.br\",\n    \"created_at\": \"2023-10-15T19:07:22.369+00:00\",\n    \"updated_at\": \"2023-10-15T19:07:22.370+00:00\",\n    \"id\": \"b8646494-98f8-4706-b5fa-83d1ed92cbd3\"\n}"
						},
						{
							"name": "422 - Unprocessable Entity",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "email@provedor.com.br",
											"description": "Email de autenticação",
											"type": "text",
											"disabled": true
										},
										{
											"key": "password",
											"value": "12345678",
											"description": "Senha de autenticação",
											"type": "text",
											"disabled": true
										}
									]
								},
								"url": {
									"raw": "localhost:3333/api/users",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"users"
									]
								}
							},
							"status": "Unprocessable Entity",
							"code": 422,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-length",
									"value": "158"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Sun, 15 Oct 2023 19:02:51 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        {\n            \"rule\": \"required\",\n            \"field\": \"email\",\n            \"message\": \"The email is required\"\n        },\n        {\n            \"rule\": \"required\",\n            \"field\": \"password\",\n            \"message\": \"The password is required\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Buscar um usuário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3333/api/users/:id",
							"host": [
								"localhost"
							],
							"port": "3333",
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{user_id}}",
									"description": "id do usuário que será editado"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3333/api/users/:id",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{user_id}}",
											"description": "id do usuário que será editado"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-length",
									"value": "167"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Sun, 15 Oct 2023 22:53:32 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"625e67e3-c5ab-4e03-9451-6545d49a67c9\",\n    \"email\": \"email@provedor.com.br\",\n    \"created_at\": \"2023-10-15T19:49:29.520-03:00\",\n    \"updated_at\": \"2023-10-15T19:49:29.520-03:00\"\n}"
						},
						{
							"name": "401 - Unauthorized",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3333/api/users/:id",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{user_id}}",
											"description": "id do usuário que será editado"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-length",
									"value": "69"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Sun, 15 Oct 2023 22:54:12 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        {\n            \"message\": \"E_UNAUTHORIZED_ACCESS: Unauthorized access\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Atualizar um usuário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "email2@provedor.com.br",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345678",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:3333/api/users/:id",
							"host": [
								"localhost"
							],
							"port": "3333",
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "email2@provedor.com.br",
											"type": "text"
										},
										{
											"key": "password",
											"value": "12345678",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3333/api/users/:id",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-length",
									"value": "168"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Sun, 15 Oct 2023 22:55:47 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"09c81b6f-588d-465a-a799-6dbcaba885f8\",\n    \"email\": \"email2@provedor.com.br\",\n    \"created_at\": \"2023-10-15T19:54:54.379-03:00\",\n    \"updated_at\": \"2023-10-15T19:55:47.389-03:00\"\n}"
						}
					]
				},
				{
					"name": "Excluir um usuário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3333/api/users/:id",
							"host": [
								"localhost"
							],
							"port": "3333",
							"path": [
								"api",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": ""
								}
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "204 - No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3333/api/users/:id",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"users",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": ""
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Sun, 15 Oct 2023 22:54:03 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				}
			],
			"description": "The `/me` endpoints let you manage information about the authenticated user."
		},
		{
			"name": "Auth",
			"item": [
				{
					"name": "Autenticar um usuário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Criar um usuário\", function () {",
									"    var { type, token } = pm.response.json();",
									"    pm.expect(type).exist",
									"    pm.expect(token).exist",
									"    pm.environment.set(\"auth_type\", type);",
									"    pm.environment.set(\"auth_token\", token);",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "{{user_email}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "12345678",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:3333/api/auth",
							"host": [
								"localhost"
							],
							"port": "3333",
							"path": [
								"api",
								"auth"
							]
						},
						"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "email",
											"value": "{{user_email}}",
											"type": "text"
										},
										{
											"key": "password",
											"value": "12345678",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3333/api/auth",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"auth"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-length",
									"value": "91"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Sun, 15 Oct 2023 22:55:26 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"type\": \"bearer\",\n    \"token\": \"NA.MyaqC_nrHJbm-n8rjfX2qQv7oMun-Qr-N058l2c6lv3V7PJ3nu-LrmSZ5XCI\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Posts",
			"item": [
				{
					"name": "Criar uma publicação",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Criar um usuário\", function () {\r",
									"    var { title, description, user_id, id } = pm.response.json();\r",
									"    pm.expect(id).exist\r",
									"    pm.expect(title).exist\r",
									"    pm.expect(description).exist\r",
									"    pm.expect(user_id).exist\r",
									"    pm.environment.set(\"post_id\", id);\r",
									"    pm.environment.set(\"post_title\", title);\r",
									"    pm.environment.set(\"post_description\", description);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Titulo do post",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n\n",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:3333/api/posts",
							"host": [
								"localhost"
							],
							"port": "3333",
							"path": [
								"api",
								"posts"
							]
						},
						"description": "Gets information about the authenticated user."
					},
					"response": [
						{
							"name": "201 - Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Titulo do post",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n\n",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3333/api/posts",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"posts"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-length",
									"value": "804"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Mon, 16 Oct 2023 00:08:09 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"title\": \"Titulo do post\",\n    \"description\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\\n\\n\",\n    \"user_id\": \"74f7a25d-a4df-4575-9dae-561b27b67436\",\n    \"created_at\": \"2023-10-15T21:08:09.251-03:00\",\n    \"updated_at\": \"2023-10-15T21:08:09.251-03:00\",\n    \"id\": \"9cbeb987-37b0-4692-a616-3b752864c8c4\"\n}"
						},
						{
							"name": "401 - Unauthorized",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Titulo do post",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n\n",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3333/api/posts",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"posts"
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-length",
									"value": "69"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Mon, 16 Oct 2023 00:29:22 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"errors\": [\n        {\n            \"message\": \"E_UNAUTHORIZED_ACCESS: Unauthorized access\"\n        }\n    ]\n}"
						}
					]
				},
				{
					"name": "Busca uma publicação",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3333/api/posts/:id",
							"host": [
								"localhost"
							],
							"port": "3333",
							"path": [
								"api",
								"posts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{post_id}}",
									"description": "id do post que será exibido"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3333/api/posts/:id",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{post_id}}",
											"description": "id do post que será exibido"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-length",
									"value": "819"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Mon, 16 Oct 2023 00:09:44 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"577f865b-d860-4b06-88c2-e42a22d98a95\",\n    \"user_id\": \"74f7a25d-a4df-4575-9dae-561b27b67436\",\n    \"title\": \"Titulo do post\",\n    \"description\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\\n\\n\",\n    \"history\": null,\n    \"created_at\": \"2023-10-15T21:09:29.448-03:00\",\n    \"updated_at\": \"2023-10-15T21:09:29.448-03:00\"\n}"
						}
					]
				},
				{
					"name": "Busca relatorio de uma publicação",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3333/api/posts/:id/report",
							"host": [
								"localhost"
							],
							"port": "3333",
							"path": [
								"api",
								"posts",
								":id",
								"report"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{post_id}}"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3333/api/posts/:id",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{post_id}}",
											"description": "id do post que será exibido"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-length",
									"value": "819"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Mon, 16 Oct 2023 00:09:44 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "\n    \"id\": \"bc67625d-f65c-4a89-ac25-7ecc87010fca\",\n    \"user_id\": \"89734757-c815-4f0d-8afd-d07748c1fc22\",\n    \"title\": \"Titulo do post\",\n    \"description\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\\n\\n\",\n    \"views\": 22,\n    \"user_likes\": [\n        {\n            \"user_id\": \"89734757-c815-4f0d-8afd-d07748c1fc22\"\n        }\n    ],\n    \"created_at\": \"2023-10-15T22:07:58.800-03:00\",\n    \"updated_at\": \"2023-10-15T22:39:30.528-03:00\",\n    \"likes\": 1,\n    \"unlikes\": 21"
						}
					]
				},
				{
					"name": "Busca publicações de um usuário",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3333/api/users/:id/posts",
							"host": [
								"localhost"
							],
							"port": "3333",
							"path": [
								"api",
								"users",
								":id",
								"posts"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{user_id}}",
									"description": "id do post que será editado"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3333/api/users/:id/posts",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"users",
										":id",
										"posts"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{user_id}}",
											"description": "id do post que será editado"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-length",
									"value": "1641"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Mon, 16 Oct 2023 00:11:10 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"9cbeb987-37b0-4692-a616-3b752864c8c4\",\n        \"user_id\": \"74f7a25d-a4df-4575-9dae-561b27b67436\",\n        \"title\": \"Titulo do post\",\n        \"description\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\\n\\n\",\n        \"created_at\": \"2023-10-15T21:08:09.251-03:00\",\n        \"updated_at\": \"2023-10-15T21:08:09.251-03:00\",\n        \"updates\": null\n    },\n    {\n        \"id\": \"577f865b-d860-4b06-88c2-e42a22d98a95\",\n        \"user_id\": \"74f7a25d-a4df-4575-9dae-561b27b67436\",\n        \"title\": \"Titulo do post atualizado\",\n        \"description\": \"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\",\n        \"created_at\": \"2023-10-15T21:09:29.448-03:00\",\n        \"updated_at\": \"2023-10-15T21:14:14.333-03:00\",\n        \"updates\": [\n            {\n                \"title\": \"Titulo do post atualizado\",\n                \"description\": \"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\",\n                \"updatedAt\": \"2023-10-15T21:09:29.448-03:00\"\n            }\n        ]\n    }\n]"
						}
					]
				},
				{
					"name": "Atualizar uma publicação",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Titulo do post atualizado",
									"type": "text"
								},
								{
									"key": "description",
									"value": "It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:3333/api/posts/:id",
							"host": [
								"localhost"
							],
							"port": "3333",
							"path": [
								"api",
								"posts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{post_id}}"
								}
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Titulo do post atualizado",
											"type": "text"
										},
										{
											"key": "description",
											"value": "It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3333/api/posts/:id",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{post_id}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-length",
									"value": "2312"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Mon, 16 Oct 2023 00:23:58 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"577f865b-d860-4b06-88c2-e42a22d98a95\",\n    \"user_id\": \"74f7a25d-a4df-4575-9dae-561b27b67436\",\n    \"title\": \"Titulo do post atualizado\",\n    \"description\": \"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\",\n    \"created_at\": \"2023-10-15T21:09:29.448-03:00\",\n    \"updated_at\": \"2023-10-15T21:23:58.330-03:00\",\n    \"updates\": \"[{\\\"title\\\":\\\"Titulo do post atualizado\\\",\\\"description\\\":\\\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\\\",\\\"updatedAt\\\":\\\"2023-10-15T21:09:29.448-03:00\\\"},{\\\"title\\\":\\\"Titulo do post atualizado\\\",\\\"description\\\":\\\"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\\\",\\\"updatedAt\\\":\\\"2023-10-15T21:14:14.333-03:00\\\"}]\"\n}"
						},
						{
							"name": "404 - Not Found",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Titulo do post atualizado",
											"type": "text"
										},
										{
											"key": "description",
											"value": "It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3333/api/posts/:id",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{post_id}}"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-length",
									"value": "37"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Mon, 16 Oct 2023 00:41:18 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Recurso não encontrado\"\n}"
						},
						{
							"name": "403 - Forbidden",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Titulo do post atualizado",
											"type": "text"
										},
										{
											"key": "description",
											"value": "It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3333/api/posts/:id",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{post_id}}"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-length",
									"value": "74"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Mon, 16 Oct 2023 00:42:32 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"message\": \"Você não possui permissão para alterar esta publicação.\"\n}"
						}
					]
				},
				{
					"name": "Curtir ou descurtir uma publicação",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "title",
									"value": "Titulo do post atualizado",
									"type": "text"
								},
								{
									"key": "description",
									"value": "It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:3333/api/posts/:id/like",
							"host": [
								"localhost"
							],
							"port": "3333",
							"path": [
								"api",
								"posts",
								":id",
								"like"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{post_id}}"
								}
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Titulo do post atualizado",
											"type": "text"
										},
										{
											"key": "description",
											"value": "It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3333/api/posts/:id/like",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"posts",
										":id",
										"like"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{post_id}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-length",
									"value": "166"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Mon, 16 Oct 2023 01:44:10 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"bc67625d-f65c-4a89-ac25-7ecc87010fca\",\n    \"user_id\": \"89734757-c815-4f0d-8afd-d07748c1fc22\",\n    \"user_likes\": \"[{\\\"user_id\\\":\\\"89734757-c815-4f0d-8afd-d07748c1fc22\\\"}]\"\n}"
						},
						{
							"name": "401 - Unauthorized",
							"originalRequest": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Titulo do post atualizado",
											"type": "text"
										},
										{
											"key": "description",
											"value": "It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3333/api/posts/:id/like",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"posts",
										":id",
										"like"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{post_id}}"
										}
									]
								}
							},
							"status": "Unauthorized",
							"code": 401,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 16 Oct 2023 02:09:20 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								},
								{
									"key": "Transfer-Encoding",
									"value": "chunked"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "Excluir uma publicação",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3333/api/posts/:id",
							"host": [
								"localhost"
							],
							"port": "3333",
							"path": [
								"api",
								"posts",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{post_id}}"
								}
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "403 - Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3333/api/posts/:id",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{post_id}}"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 16 Oct 2023 00:26:37 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": null
						},
						{
							"name": "204 - No Content",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3333/api/posts/:id",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"posts",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{post_id}}"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 16 Oct 2023 00:43:36 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		},
		{
			"name": "Comments",
			"item": [
				{
					"name": "Criar um comentario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Criar um comentario\", function () {\r",
									"    var { id } = pm.response.json();\r",
									"    pm.expect(id).exist\r",
									"    pm.environment.set(\"comment_id\", id);\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "description",
									"value": "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n\n",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:3333/api/posts/:id/comments",
							"host": [
								"localhost"
							],
							"port": "3333",
							"path": [
								"api",
								"posts",
								":id",
								"comments"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{post_id}}"
								}
							]
						},
						"description": "Gets information about the authenticated user."
					},
					"response": [
						{
							"name": "201 - Created",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "title",
											"value": "Titulo do post",
											"type": "text"
										},
										{
											"key": "description",
											"value": "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n\n",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3333/api/posts/:id/comments",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"posts",
										":id",
										"comments"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{post_id}}"
										}
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-length",
									"value": "828"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Mon, 16 Oct 2023 13:44:03 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"description\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\\n\\n\",\n    \"user_id\": \"89734757-c815-4f0d-8afd-d07748c1fc22\",\n    \"post_id\": \"bc67625d-f65c-4a89-ac25-7ecc87010fca\",\n    \"created_at\": \"2023-10-16T10:44:03.703-03:00\",\n    \"updated_at\": \"2023-10-16T10:44:03.703-03:00\",\n    \"id\": \"481a1e62-158d-4233-8719-5e89335d9a0f\"\n}"
						}
					]
				},
				{
					"name": "Listar comentarios de uma publicação",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3333/api/posts/:id/comments",
							"host": [
								"localhost"
							],
							"port": "3333",
							"path": [
								"api",
								"posts",
								":id",
								"comments"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{post_id}}",
									"description": "id do post que será exibido"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3333/api/posts/:id/comments",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"posts",
										":id",
										"comments"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{post_id}}",
											"description": "id do post que será exibido"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-length",
									"value": "848"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Mon, 16 Oct 2023 13:45:54 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "[\n    {\n        \"id\": \"481a1e62-158d-4233-8719-5e89335d9a0f\",\n        \"user_id\": \"89734757-c815-4f0d-8afd-d07748c1fc22\",\n        \"post_id\": \"bc67625d-f65c-4a89-ac25-7ecc87010fca\",\n        \"description\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\\n\\n\",\n        \"deleted_by\": null,\n        \"created_at\": \"2023-10-16T10:44:03.703-03:00\",\n        \"updated_at\": \"2023-10-16T10:44:03.703-03:00\"\n    }\n]"
						}
					]
				},
				{
					"name": "Exibir um comentario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:3333/api/comments/:id",
							"host": [
								"localhost"
							],
							"port": "3333",
							"path": [
								"api",
								"comments",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{comment_id}}",
									"description": "id do post que será exibido"
								}
							]
						},
						"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3333/api/comments/:id",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{post_id}}",
											"description": "id do post que será exibido"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-length",
									"value": "819"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Mon, 16 Oct 2023 00:09:44 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"481a1e62-158d-4233-8719-5e89335d9a0f\",\n    \"user_id\": \"89734757-c815-4f0d-8afd-d07748c1fc22\",\n    \"post_id\": \"bc67625d-f65c-4a89-ac25-7ecc87010fca\",\n    \"description\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\\n\\n\",\n    \"deleted_by\": null,\n    \"created_at\": \"2023-10-16T10:44:03.703-03:00\",\n    \"updated_at\": \"2023-10-16T10:44:03.703-03:00\"\n}"
						},
						{
							"name": "200 - OK (comentario deletado)",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "localhost:3333/api/comments/:id",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{comment_id}}",
											"description": "id do post que será exibido"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-length",
									"value": "934"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Mon, 16 Oct 2023 14:28:30 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"760d25f0-5e0a-48f5-a416-c93e40bdb290\",\n    \"user_id\": \"89734757-c815-4f0d-8afd-d07748c1fc22\",\n    \"post_id\": \"bc67625d-f65c-4a89-ac25-7ecc87010fca\",\n    \"description\": \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\\n\\n\",\n    \"deleted_by\": \"89734757-c815-4f0d-8afd-d07748c1fc22\",\n    \"created_at\": \"2023-10-16T11:20:23.018-03:00\",\n    \"updated_at\": \"2023-10-16T11:20:25.261-03:00\",\n    \"deleted_message\": \"Deletado pelo dono do comentario.\"\n}"
						}
					]
				},
				{
					"name": "Atualizar um comentario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful PUT request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "description",
									"value": "It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "localhost:3333/api/comments/:id",
							"host": [
								"localhost"
							],
							"port": "3333",
							"path": [
								"api",
								"comments",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{comment_id}}"
								}
							]
						},
						"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "200 - OK",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "formdata",
									"formdata": [
										{
											"key": "description",
											"value": "It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).",
											"type": "text"
										}
									]
								},
								"url": {
									"raw": "localhost:3333/api/comments/:id",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{comment_id}}"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "content-length",
									"value": "881"
								},
								{
									"key": "content-type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Date",
									"value": "Mon, 16 Oct 2023 14:15:26 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"481a1e62-158d-4233-8719-5e89335d9a0f\",\n    \"user_id\": \"89734757-c815-4f0d-8afd-d07748c1fc22\",\n    \"post_id\": \"bc67625d-f65c-4a89-ac25-7ecc87010fca\",\n    \"description\": \"It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters, as opposed to using 'Content here, content here', making it look like readable English. Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved over the years, sometimes by accident, sometimes on purpose (injected humour and the like).\",\n    \"deleted_by\": null,\n    \"created_at\": \"2023-10-16T10:44:03.703-03:00\",\n    \"updated_at\": \"2023-10-16T11:15:26.149-03:00\"\n}"
						}
					]
				},
				{
					"name": "Excluir um comentario",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful DELETE request\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{auth_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:3333/api/comments/:id",
							"host": [
								"localhost"
							],
							"port": "3333",
							"path": [
								"api",
								"comments",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{comment_id}}"
								}
							]
						},
						"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
					},
					"response": [
						{
							"name": "403 - Forbidden",
							"originalRequest": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "localhost:3333/api/comments/:id",
									"host": [
										"localhost"
									],
									"port": "3333",
									"path": [
										"api",
										"comments",
										":id"
									],
									"variable": [
										{
											"key": "id",
											"value": "{{post_id}}"
										}
									]
								}
							},
							"status": "No Content",
							"code": 204,
							"_postman_previewlanguage": "plain",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 16 Oct 2023 00:26:37 GMT"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Keep-Alive",
									"value": "timeout=5"
								}
							],
							"cookie": [],
							"body": null
						}
					]
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "key",
				"value": "X-API-Key",
				"type": "string"
			},
			{
				"key": "value",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://farming-simulator.pstmn.io"
		}
	]
}